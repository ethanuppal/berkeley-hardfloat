import os
import sys
import subprocess


def main():
    if len(sys.argv) != 2:
        print(f"Usage: {sys.argv[0]} <patch_directory>")
        sys.exit(1)
    directory = sys.argv[1]
    changelog = ["_This changelog is automatically generated._", ""]
    for filename in sorted(os.listdir(directory)):
        if filename.endswith(".patch"):
            patch_path = os.path.join(directory, filename)

            with open(patch_path, "r") as f:
                parts = filename.rsplit(".")[0].split("-")
                name = " ".join(parts[1:]).capitalize()
                changelog.extend([f"### {parts[0]}. {name}", ""])
                changelog.extend(
                    [line[2:].strip() for line in f if line.startswith("#! ")]
                )
                changelog.extend([""])

            print(f"Applying {filename}")
            subprocess.run(["git", "apply", patch_path], check=True)

    README_PATH = "README.md"
    README_GEN_PATH = "README_gen.md"

    # VERSION_TAG = requests.get(
    #     "https://api.github.com/repos/ethanuppal/berkeley-hardfloat/releases/latest"
    # ).json()["name"]

    with open(README_GEN_PATH, "r") as f:
        readme = {"content": f.read()}

        def put(var, text):
            readme["content"] = readme["content"].replace("{{" + var + "}}", text)

        # put("VERSION", VERSION_TAG)
        put("CHANGELOG", "\n".join(changelog))

        with open(README_PATH, "w") as f:
            f.write(
                f"<!-- THIS FILE IS GENERATED AUTOMATICALLY. -->\n<!-- DO NOT EDIT THIS FILE. -->\n<!-- EDIT {README_GEN_PATH} INSTEAD. -->\n"
                + readme["content"]
            )


if __name__ == "__main__":
    main()
